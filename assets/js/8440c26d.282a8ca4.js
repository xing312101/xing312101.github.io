"use strict";(self.webpackChunkxing_life_3=self.webpackChunkxing_life_3||[]).push([[5062],{1024:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>c,contentTitle:()=>i,default:()=>x,frontMatter:()=>o,metadata:()=>l,toc:()=>a});var n=t(4848),s=t(8453);const o={},i="RxJS",l={id:"technique/angular/rxjs",title:"RxJS",description:"unorganized",source:"@site/docs/technique/angular/rxjs.md",sourceDirName:"technique/angular",slug:"/technique/angular/rxjs",permalink:"/docs/technique/angular/rxjs",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"techniqueSidebar",previous:{title:"proxy",permalink:"/docs/technique/angular/proxy"},next:{title:"AngularJS",permalink:"/docs/technique/angularjs/"}},c={},a=[{value:"create observables in RxJS6",id:"create-observables-in-rxjs6",level:2},{value:"using pipeable operators in RxJS5",id:"using-pipeable-operators-in-rxjs5",level:2},{value:"using pipeable operators in RxJS6",id:"using-pipeable-operators-in-rxjs6",level:2},{value:"create custom operators",id:"create-custom-operators",level:2},{value:"promise",id:"promise",level:2},{value:"Handling Errors on the Observer Side",id:"handling-errors-on-the-observer-side",level:2},{value:"Handling Errors on the Observable Side",id:"handling-errors-on-the-observable-side",level:2}];function d(e){const r={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(r.header,{children:(0,n.jsx)(r.h1,{id:"rxjs",children:"RxJS"})}),"\n",(0,n.jsxs)(r.blockquote,{children:["\n",(0,n.jsx)(r.p,{children:"unorganized"}),"\n"]}),"\n",(0,n.jsx)(r.h1,{id:"rx-js",children:"Rx JS"}),"\n",(0,n.jsx)(r.h2,{id:"create-observables-in-rxjs6",children:"create observables in RxJS6"}),"\n",(0,n.jsx)(r.p,{children:"xxx.service.ts"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{children:"Import {.Observable, from } from \u2018rxjs\u2019\n\nexport class XxxService {\n\tgetXxx():Observable<string>{\n\t\treturn from(FOOD_LIST)\n\t}\n}\n\n\napp.component.ts\n\nconstructor(private xxxService: XxxService) {}\n\ndemo(){\n\tthis.foodService.getFoods()\n\t.subscribe( x => {\n\t\tconsole.log(\u2018value: \u2019, $(x))\n\t})\n}\n"})}),"\n",(0,n.jsx)(r.h2,{id:"using-pipeable-operators-in-rxjs5",children:"using pipeable operators in RxJS5"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{children:"getXxxUppercase():Observable<string>{\n\treturn Observable.from(FOOD_LIST).map( x => x.toUpperCase() )\n}\n"})}),"\n",(0,n.jsx)(r.h2,{id:"using-pipeable-operators-in-rxjs6",children:"using pipeable operators in RxJS6"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{children:"return from(FOOD_LIST).piple(\n\tpassOnlyStartswinVowel()\n\tmap(x => x.toUpperCase())\n)\n"})}),"\n",(0,n.jsx)(r.h2,{id:"create-custom-operators",children:"create custom operators"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{children:"Import {.Observable } from \u201crxjs\u201d;\n\nexport const passOnlyStartswinVowel = () => <T>(source:Observable<T>) =>\n\tnew Observable<T> observer => {\n\t\treturn source.subscribe({\n\t\t\tnext(x){\n\t\t\t\tlet char = x.toString().charAt(0).toLowerCase()\n\t\t\t\tif (char == \u201ca\u201d ||\n\t\t\t\t    char == \u201ce\u201d ||\n\t\t\t\t    char == \u201ci\u201d ||\n\t\t\t\t    char == \u201co\u201d ||\n\t\t\t\t    char == \u201cu\u201d) {\n\n\t\t\t\t\tobserver.next(x)\n\t\t\t\t}\n\t\t\t},\n\t\t\terror(err) {\n\t\t\t\tobserver.error(err)\n\t\t\t},\n\t\t\tcomplete() {\n\t\t\t\tobserver.complete()\n\t\t\t}\n\t\t})\n\t}\n"})}),"\n",(0,n.jsx)(r.h2,{id:"promise",children:"promise"}),"\n",(0,n.jsx)(r.p,{children:"In service"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{children:"getXXX_p():Promise<any> {\n\t// RxJS 5\n\tlet myObs::Observable<any> = this.http.get(\u201chttp://localhost:3000/foods\u201d)\n\treturn myObs.toPromise()\n\n\t// RxJS 6\n\treturn this.http.get(\u201chttp://localhost:3000/foods\u201d).toPromise()\n\n}\n"})}),"\n",(0,n.jsx)(r.p,{children:"In app"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{children:"demo_getXXX_promise() {\n\tthis.xxxService.getXXX_p()\n\t.then( xxx = > console.log(xxx))\n\t.catch( err => console.log(\u201cerror: ${err}\u201d))\n}\n"})}),"\n",(0,n.jsx)(r.h2,{id:"handling-errors-on-the-observer-side",children:"Handling Errors on the Observer Side"}),"\n",(0,n.jsx)(r.p,{children:"In service\nobserver.error(new Error(\u201cError\u201d))"}),"\n",(0,n.jsx)(r.p,{children:"In app"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{children:"demo_getXXX_getXXXX_e() {\n\tthis.xxxService.getFoods_e()\n\t.subscribe(\n\t\tnext => { console.log(\u201creceived emitted value: ${next}\u201d) },\n\t\terror => { console.log(\u201creceived an error: ${error}\u201d) },\n\t\t() => {console.log(\u201creceived is complete\u201d)}\n}\n"})}),"\n",(0,n.jsx)(r.h2,{id:"handling-errors-on-the-observable-side",children:"Handling Errors on the Observable Side"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{children:"getFoods_e():Observable<any>{\n\treturn Observable.create( observer => {\n\t\tlet index = 0;\n\n\t\tsetInterval( () => {\n\t\t\tlet nextFood = FOOD_LIST(index)\n\t\t\tif(nextFood) {\n\t\t\t\tobserver.next(nextFood)\n\t\t\t\tindex++;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tobserver.error(new Error(\u201cArray access error\u201d))\n\t\t\t}\n\t\t}, 1000)\n\t})\n\t.catch( err => {\n\t\tconsole.log(\u201cthere is same error with the observable.\u201d)\n\t\treturn Observable.of(FOOD_LIST)\n\t})\n}\n"})})]})}function x(e={}){const{wrapper:r}={...(0,s.R)(),...e.components};return r?(0,n.jsx)(r,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},8453:(e,r,t)=>{t.d(r,{R:()=>i,x:()=>l});var n=t(6540);const s={},o=n.createContext(s);function i(e){const r=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function l(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),n.createElement(o.Provider,{value:r},e.children)}}}]);