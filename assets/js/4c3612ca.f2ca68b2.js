"use strict";(self.webpackChunkxing_life_3=self.webpackChunkxing_life_3||[]).push([[8530],{8855:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>d,contentTitle:()=>l,default:()=>u,frontMatter:()=>a,metadata:()=>o,toc:()=>s});var t=n(4848),r=n(8453);const a={},l="FlutterFire (Flutter + Firebase)",o={id:"technique/pg_languages/flutter/flutterfire",title:"FlutterFire (Flutter + Firebase)",description:"https://firebase.flutter.dev/docs/overview/",source:"@site/docs/technique/pg_languages/flutter/flutterfire.md",sourceDirName:"technique/pg_languages/flutter",slug:"/technique/pg_languages/flutter/flutterfire",permalink:"/docs/technique/pg_languages/flutter/flutterfire",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"techniqueSidebar",previous:{title:"flutter_sound",permalink:"/docs/technique/pg_languages/flutter/flutter_sound"},next:{title:"get device info",permalink:"/docs/technique/pg_languages/flutter/get_device_info"}},d={},s=[{value:"pubspec.yaml",id:"pubspecyaml",level:2},{value:"register application in firebase",id:"register-application-in-firebase",level:2},{value:"Android",id:"android",level:3},{value:"1. register application by perform",id:"1-register-application-by-perform",level:4},{value:"2. get applicationId from android/app/build.gradle in flutter project",id:"2-get-applicationid-from-androidappbuildgradle-in-flutter-project",level:4},{value:"3. get google-services.json and download",id:"3-get-google-servicesjson-and-download",level:4},{value:"4. put google-services.json in android/app",id:"4-put-google-servicesjson-in-androidapp",level:4},{value:"5. update android/build.gradle",id:"5-update-androidbuildgradle",level:4},{value:"6. update android/app/build.gradle",id:"6-update-androidappbuildgradle",level:4},{value:"IOS",id:"ios",level:3},{value:"Initializing FlutterFire in coding",id:"initializing-flutterfire-in-coding",level:2},{value:"example: using FutureBuilder",id:"example-using-futurebuilder",level:3},{value:"example: using StatefulWidget",id:"example-using-statefulwidget",level:3}];function p(e){const i={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(i.header,{children:(0,t.jsx)(i.h1,{id:"flutterfire-flutter--firebase",children:"FlutterFire (Flutter + Firebase)"})}),"\n",(0,t.jsxs)(i.blockquote,{children:["\n",(0,t.jsx)(i.p,{children:(0,t.jsx)(i.a,{href:"https://firebase.flutter.dev/docs/overview/",children:"https://firebase.flutter.dev/docs/overview/"})}),"\n"]}),"\n",(0,t.jsx)(i.h2,{id:"pubspecyaml",children:"pubspec.yaml"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{children:'dependencies:\n  flutter:\n    sdk: flutter\n  firebase_core: "^1.1.0"\n\n'})}),"\n",(0,t.jsx)(i.h2,{id:"register-application-in-firebase",children:"register application in firebase"}),"\n",(0,t.jsx)(i.h3,{id:"android",children:"Android"}),"\n",(0,t.jsx)(i.h4,{id:"1-register-application-by-perform",children:"1. register application by perform"}),"\n",(0,t.jsx)(i.h4,{id:"2-get-applicationid-from-androidappbuildgradle-in-flutter-project",children:"2. get applicationId from android/app/build.gradle in flutter project"}),"\n",(0,t.jsx)(i.h4,{id:"3-get-google-servicesjson-and-download",children:"3. get google-services.json and download"}),"\n",(0,t.jsx)(i.h4,{id:"4-put-google-servicesjson-in-androidapp",children:"4. put google-services.json in android/app"}),"\n",(0,t.jsx)(i.h4,{id:"5-update-androidbuildgradle",children:"5. update android/build.gradle"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{children:"buildscript {\n  repositories {\n    // Check that you have the following line (if not, add it):\n    google()  // Google's Maven repository\n  }\n  dependencies {\n    ...\n    // Add this line\n    classpath 'com.google.gms:google-services:4.3.5'\n  }\n}\n\nallprojects {\n  ...\n  repositories {\n    // Check that you have the following line (if not, add it):\n    google()  // Google's Maven repository\n    ...\n  }\n}\n"})}),"\n",(0,t.jsx)(i.h4,{id:"6-update-androidappbuildgradle",children:"6. update android/app/build.gradle"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{children:"apply plugin: 'com.android.application'\n// Add this line\napply plugin: 'com.google.gms.google-services'\n\ndependencies {\n  // Import the Firebase BoM\n  implementation platform('com.google.firebase:firebase-bom:27.1.0')\n\n  // Add the dependency for the Firebase SDK for Google Analytics\n  // When using the BoM, don't specify versions in Firebase dependencies\n  implementation 'com.google.firebase:firebase-analytics'\n\n  // Add the dependencies for any other desired Firebase products\n  // https://firebase.google.com/docs/android/setup#available-libraries\n}\n"})}),"\n",(0,t.jsx)(i.h3,{id:"ios",children:"IOS"}),"\n",(0,t.jsx)(i.p,{children:"TBD..."}),"\n",(0,t.jsx)(i.h2,{id:"initializing-flutterfire-in-coding",children:"Initializing FlutterFire in coding"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{children:"await Firebase.initializeApp();\n"})}),"\n",(0,t.jsx)(i.h3,{id:"example-using-futurebuilder",children:"example: using FutureBuilder"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{children:"import 'package:flutter/material.dart';\n\n// Import the firebase_core plugin\nimport 'package:firebase_core/firebase_core.dart';\n\nvoid main() {\n  WidgetsFlutterBinding.ensureInitialized();\n  runApp(App());\n}\n\n/// We are using a StatefulWidget such that we only create the [Future] once,\n/// no matter how many times our widget rebuild.\n/// If we used a [StatelessWidget], in the event where [App] is rebuilt, that\n/// would re-initialize FlutterFire and make our application re-enter loading state,\n/// which is undesired.\nclass App extends StatefulWidget {\n  // Create the initialization Future outside of `build`:\n  @override\n  _AppState createState() => _AppState();\n}\n\nclass _AppState extends State<App> {\n  /// The future is part of the state of our widget. We should not call `initializeApp`\n  /// directly inside [build].\n  final Future<FirebaseApp> _initialization = Firebase.initializeApp();\n\n  @override\n  Widget build(BuildContext context) {\n    return FutureBuilder(\n      // Initialize FlutterFire:\n      future: _initialization,\n      builder: (context, snapshot) {\n        // Check for errors\n        if (snapshot.hasError) {\n          return SomethingWentWrong();\n        }\n\n        // Once complete, show your application\n        if (snapshot.connectionState == ConnectionState.done) {\n          return MyAwesomeApp();\n        }\n\n        // Otherwise, show something whilst waiting for initialization to complete\n        return Loading();\n      },\n    );\n  }\n}\n"})}),"\n",(0,t.jsx)(i.h3,{id:"example-using-statefulwidget",children:"example: using StatefulWidget"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{children:"import 'package:flutter/material.dart';\n\n// Import the firebase_core plugin\nimport 'package:firebase_core/firebase_core.dart';\n\nvoid main() {\n  WidgetsFlutterBinding.ensureInitialized();\n  runApp(App());\n}\n\nclass App extends StatefulWidget {\n  _AppState createState() => _AppState();\n}\n\nclass _AppState extends State<App> {\n  // Set default `_initialized` and `_error` state to false\n  bool _initialized = false;\n  bool _error = false;\n\n  // Define an async function to initialize FlutterFire\n  void initializeFlutterFire() async {\n    try {\n      // Wait for Firebase to initialize and set `_initialized` state to true\n      await Firebase.initializeApp();\n      setState(() {\n        _initialized = true;\n      });\n    } catch(e) {\n      // Set `_error` state to true if Firebase initialization fails\n      setState(() {\n        _error = true;\n      });\n    }\n  }\n\n  @override\n  void initState() {\n    initializeFlutterFire();\n    super.initState();\n  }\n\n  @override\n  Widget build(BuildContext context) {\n    // Show error message if initialization failed\n    if(_error) {\n      return SomethingWentWrong();\n    }\n\n    // Show a loader until FlutterFire is initialized\n    if (!_initialized) {\n      return Loading();\n    }\n\n    return MyAwesomeApp();\n  }\n}\n"})})]})}function u(e={}){const{wrapper:i}={...(0,r.R)(),...e.components};return i?(0,t.jsx)(i,{...e,children:(0,t.jsx)(p,{...e})}):p(e)}},8453:(e,i,n)=>{n.d(i,{R:()=>l,x:()=>o});var t=n(6540);const r={},a=t.createContext(r);function l(e){const i=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function o(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),t.createElement(a.Provider,{value:i},e.children)}}}]);