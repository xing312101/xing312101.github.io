"use strict";(self.webpackChunkxing_life_3=self.webpackChunkxing_life_3||[]).push([[1121],{7213:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>i,default:()=>g,frontMatter:()=>s,metadata:()=>a,toc:()=>c});var o=n(4848),r=n(8453);const s={},i="Google AutoLogin",a={id:"technique/pg_languages/ruby_on_rails/google_autologin",title:"Google AutoLogin",description:"",source:"@site/docs/technique/pg_languages/ruby_on_rails/google_autologin.md",sourceDirName:"technique/pg_languages/ruby_on_rails",slug:"/technique/pg_languages/ruby_on_rails/google_autologin",permalink:"/docs/technique/pg_languages/ruby_on_rails/google_autologin",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"techniqueSidebar",previous:{title:"Gems",permalink:"/docs/technique/pg_languages/ruby_on_rails/gems"},next:{title:"grape",permalink:"/docs/technique/pg_languages/ruby_on_rails/grape"}},u={},c=[];function l(e){const t={code:"code",h1:"h1",header:"header",pre:"pre",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.header,{children:(0,o.jsx)(t.h1,{id:"google-autologin",children:"Google AutoLogin"})}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{children:"require 'net/http'\nrequire 'net/https'\nrequire 'cgi'\nrequire 'uri'\nrequire 'rubygems'\nrequire 'hpricot'\n\nmodule Net\n\tclass HTTPS < HTTP\n\t\tdef initialize(address, port = nil)\n\t\t\tsuper(address, port)\n\t\t\tself.use_ssl = true\n\t\tend\n\tend\nend\n\nclass GAuth\n\tGOOGLE_LOGIN_URL = URI.parse('https://www.google.com/accounts/ServiceLoginBoxAuth')\n\tattr_reader :service, :url,:cookie\n\n\tdef initialize(service,url)\n\t\t@service = service\n\t\t@url = url\n\tend\n\n\tdef authenticate(email, password)\n\t\t$VERBOSE = nil\n\t\tresponse = Net::HTTPS.post_form(GOOGLE_LOGIN_URL,\n\t\t\t{'Email' => email,\n\t\t\t'Passwd' => password,\n\t\t\t'service' => service })\n\n\t\t@cookie = response.response[\"set-cookie\"]\n\n\t\tresponse.error! unless response.kind_of? Net::HTTPSuccess\n\n\t\t@headers = {\n\t\t\t'Cookie' => @cookie\n\t\t}\n\tend\n\n\tdef get(path)\n\t\tresponse, data = http.get(path, @headers)\n\t\tdata\n\tend\n\n\tdef http\n\t\tconn = Net::HTTP.new(url, 80)\n\t\t#conn.set_debug_output $stderr\n\t\tconn\n\tend\nend\n\ng = GAuth.new(\"blah\",\"blah.google.com\")\ng.authenticate(\"blah@gmail.com\",\"blah\")\n"})})]})}function g(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>a});var o=n(6540);const r={},s=o.createContext(r);function i(e){const t=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),o.createElement(s.Provider,{value:t},e.children)}}}]);