"use strict";(self.webpackChunkxing_life_3=self.webpackChunkxing_life_3||[]).push([[8214],{6970:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>u,frontMatter:()=>r,metadata:()=>o,toc:()=>a});var l=t(4848),i=t(8453);const r={},s="zebra-zpl",o={id:"technique/ruby_on_rails/zebra-zpl",title:"zebra-zpl",description:"reference//github.com/bbulpett/zebra-zpl",source:"@site/docs/technique/ruby_on_rails/zebra-zpl.md",sourceDirName:"technique/ruby_on_rails",slug:"/technique/ruby_on_rails/zebra-zpl",permalink:"/docs/technique/ruby_on_rails/zebra-zpl",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"techniqueSidebar",previous:{title:"XML",permalink:"/docs/technique/ruby_on_rails/xml"},next:{title:"Zip File with mutiple file",permalink:"/docs/technique/ruby_on_rails/zip_file_with_mutiple_file"}},c={},a=[{value:"system lib",id:"system-lib",level:2},{value:"usage",id:"usage",level:2},{value:"notice",id:"notice",level:3}];function p(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.header,{children:(0,l.jsx)(n.h1,{id:"zebra-zpl",children:"zebra-zpl"})}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsxs)(n.p,{children:["reference: ",(0,l.jsx)(n.a,{href:"https://github.com/bbulpett/zebra-zpl",children:"https://github.com/bbulpett/zebra-zpl"})]}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:"\u81ea\u8a02label.zpl"}),"\n",(0,l.jsx)(n.p,{children:"need gem: cups-0.1.10"}),"\n",(0,l.jsx)(n.h2,{id:"system-lib",children:"system lib"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"sudo apt-get install libcups2-dev\nsudo apt-get install libcupsimage2-dev\n"})}),"\n",(0,l.jsx)(n.h2,{id:"usage",children:"usage"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:'label = Zebra::Zpl::Label.new :print_density => 6, :print_speed => 3\ntext = Zebra::Zpl::Text.new :data => "Hello, printer!", :position => [100, 100], :font_size => Zebra::Zpl::FontSize::SIZE_2\nlabel << text\n\nf_label = label.persist\nf_label.open\n\nFile.open("#{Rails.root}/public/otherFile", \'w\') { |file|\n\tfile.write(f_label.read)\n}\n\nf_label.close\nf_label.unlink\n'})}),"\n",(0,l.jsx)(n.h3,{id:"notice",children:"notice"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:'text have print_mode, value is "N" or "R"\n'})})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(p,{...e})}):p(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>o});var l=t(6540);const i={},r=l.createContext(i);function s(e){const n=l.useContext(r);return l.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),l.createElement(r.Provider,{value:n},e.children)}}}]);