"use strict";(self.webpackChunkxing_life_3=self.webpackChunkxing_life_3||[]).push([[731],{6987:(n,t,e)=>{e.r(t),e.d(t,{assets:()=>a,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>p,toc:()=>l});var s=e(4848),r=e(8453);const i={},o="Http api methods",p={id:"technique/flutter/http_api_methods",title:"Http api methods",description:"https://ithelp.ithome.com.tw/articles/10248231",source:"@site/docs/technique/flutter/http_api_methods.md",sourceDirName:"technique/flutter",slug:"/technique/flutter/http_api_methods",permalink:"/docs/technique/flutter/http_api_methods",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"techniqueSidebar",previous:{title:"http",permalink:"/docs/technique/flutter/http"},next:{title:"Input",permalink:"/docs/technique/flutter/input"}},a={},l=[{value:"HttpClient",id:"httpclient",level:2},{value:"Http",id:"http",level:2},{value:"Dio",id:"dio",level:2}];function c(n){const t={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"http-api-methods",children:"Http api methods"})}),"\n",(0,s.jsxs)(t.blockquote,{children:["\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.a,{href:"https://ithelp.ithome.com.tw/articles/10248231",children:"https://ithelp.ithome.com.tw/articles/10248231"})}),"\n"]}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{}),(0,s.jsx)(t.th,{children:"HttpClient"}),(0,s.jsx)(t.th,{children:"Http"}),(0,s.jsx)(t.th,{children:"Dio"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"application/json"}),(0,s.jsx)(t.td,{children:"O"}),(0,s.jsx)(t.td,{children:"O"}),(0,s.jsx)(t.td,{children:"O"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"application/x-www-form-urlencode"}),(0,s.jsx)(t.td,{children:"X"}),(0,s.jsx)(t.td,{children:"O"}),(0,s.jsx)(t.td,{children:"O"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"multipart/form-data"}),(0,s.jsx)(t.td,{children:"X"}),(0,s.jsx)(t.td,{children:"O"}),(0,s.jsx)(t.td,{children:"O"})]})]})]}),"\n",(0,s.jsx)(t.h2,{id:"httpclient",children:"HttpClient"}),"\n",(0,s.jsxs)(t.blockquote,{children:["\n",(0,s.jsxs)(t.p,{children:["Flutter dart",":io","\u5167\u5efa\u7684HttpClient"]}),"\n"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:'void loginHttpClientWWW(void Function() success, void Function() fail) async {\n\n    var urlString = "https://xxxx.xx/login";\n    HttpClient()\n        .postUrl(Uri.parse(urlString))\n        .then((HttpClientRequest request) {\n      request.headers.contentType = ContentType("application", "x-www-form-urlencoded");\n      request.write("{\\"email\\":\\"test@test\\",\\"password\\":\\"hello\\"}");\n      return request.close();\n\n    }).then((HttpClientResponse response) {\n      if (response.statusCode == 200) {\n        response.transform(utf8.decoder).join().then((String string) {\n          print("HttpClientWWW Success\uff1a$string");\n          success();\n        });\n      } else {\n        print("HttpClientWWW Fail\uff1a${response.statusCode}");\n        fail();\n      }\n    });\n  }\n\n  void loginHttpClientJson(void Function() success, void Function() fail) async {\n\n    var urlString = "http://httpbin.org/delay/1";\n    HttpClient()\n        .postUrl(Uri.parse(urlString))\n        .then((HttpClientRequest request) {\n      request.headers.contentType = ContentType("application", "json");\n\n      Map<String,String> p = {"UserName":"test@test", "Password":"hello"};\n      request.add(utf8.encode(json.encode(p)));\n      return request.close();\n\n    }).then((HttpClientResponse response) {\n      if (response.statusCode == 200) {\n        response.transform(utf8.decoder).join().then((String string) {\n          print("HttpClientJson Success\uff1a$string");\n          success();\n        });\n      } else {\n        print("HttpClientJson Fail\uff1a${response.statusCode}");\n        fail();\n      }\n    });\n  }\n'})}),"\n",(0,s.jsx)(t.h2,{id:"http",children:"Http"}),"\n",(0,s.jsxs)(t.blockquote,{children:["\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.a,{href:"https://pub.dev/packages/http",children:"https://pub.dev/packages/http"})}),"\n"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:'void loginHttpWWW(void Function() success, void Function() fail) async {\n\n    var urlString = "https://xxxx.xx/login";\n    Map<String, String> headersMap = new Map();\n    headersMap["content-type"] = "application/x-www-form-urlencoded";\n\n    Map<String, String> bodyParams = new Map();\n    bodyParams["email"] = "test@test";\n    bodyParams["password"] = "hello";\n    http.Client()\n        .post(urlString, headers: headersMap, body: bodyParams, encoding: Utf8Codec())\n        .then((http.Response response) {\n      if (response.statusCode == 200) {\n        print("httpWWW Success\uff1a${response.body}");\n        success();\n      } else {\n        print("httpWWW Fail\uff1a${response.statusCode}");\n        fail();\n      }\n    }).catchError((error) {\n      print("httpWWW Fail\uff1a${error.toString()}");\n      fail();\n    });\n  }\n\n  void loginHttpJson(void Function() success, void Function() fail) async {\n\n    var urlString = "https://xxxx.xx/login";\n    Map<String, String> headersMap = new Map();\n    headersMap["content-type"] = ContentType.json.toString();\n\n    Map<String, String> bodyParams = new Map();\n    bodyParams["email"] = "test@test";\n    bodyParams["password"] = "hello";\n    http.Client()\n        .post(urlString, headers: headersMap, body: jsonEncode(bodyParams), encoding: Utf8Codec())\n        .then((http.Response response) {\n      if (response.statusCode == 200) {\n        print("httpJson Success\uff1a${response.body}");\n        success();\n      } else {\n        print("httpJson Fail\uff1a${response.statusCode}");\n        fail();\n      }\n    }).catchError((error) {\n      print("httpJson Fail\uff1a${error.toString()}");\n      fail();\n    });\n  }\n\n  void loginHttpForm(void Function() success, void Function() fail) async {\n\n    var urlString = "https://xxxx.xx/login";\n    var client = new http.MultipartRequest("post", Uri.parse(urlString));\n    client.fields["email"] = "test@test";\n    client.fields["password"] = "hello";\n    client.send().then((http.StreamedResponse response) {\n      if (response.statusCode == 200) {\n        response.stream.transform(utf8.decoder).join().then((String string) {\n          print("httpForm Success\uff1a$string");\n          success();\n        });\n      } else {\n        print("httpForm Fail\uff1a${response.statusCode}");\n        fail();\n      }\n    }).catchError((error) {\n      print("httpForm Fail\uff1a${error.toString()}");\n      fail();\n    });\n  }\n'})}),"\n",(0,s.jsx)(t.h2,{id:"dio",children:"Dio"}),"\n",(0,s.jsxs)(t.blockquote,{children:["\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.a,{href:"https://pub.dev/packages/dio",children:"https://pub.dev/packages/dio"})}),"\n"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:' void loginDioWWW(void Function() success, void Function() fail) async {\n\n    var urlString = "https://xxxx.xx/login";\n    try {\n      Response response = await Dio()\n        .post(urlString,\n          data: {"email":"test@test", "password":"hello"},\n          options: Options(contentType:Headers.formUrlEncodedContentType));\n      print("DioWWW Success\uff1a${response.data}");\n      success();\n    } catch (error) {\n      print("DioWWW Fail\uff1a${error.toString()}");\n      fail();\n    }\n  }\n\n  void loginDioJson(void Function() success, void Function() fail) async {\n\n    var urlString = "https://xxxx.xx/login";\n    try {\n      Response response = await Dio()\n          .post(urlString,\n          data: {"email":"test@test", "password":"hello"},\n          options: Options(contentType:Headers.jsonContentType));\n      print("DioJson Success\uff1a${response.data}");\n      success();\n    } catch (error) {\n      print("DioJson Fail\uff1a${error.toString()}");\n      fail();\n    }\n  }\n\n  void loginDioForm(void Function() success, void Function() fail) async {\n\n    var urlString = "https://xxxx.xx/login";\n    try {\n      Response response = await Dio()\n          .post(urlString,\n          data: FormData.fromMap({"email":"test@test", "password":"hello"}));\n      print("DioForm Success\uff1a${response.data}");\n      success();\n    } catch (error) {\n      print("DioForm Fail\uff1a${error.toString()}");\n      fail();\n    }\n  }\n}\n'})})]})}function d(n={}){const{wrapper:t}={...(0,r.R)(),...n.components};return t?(0,s.jsx)(t,{...n,children:(0,s.jsx)(c,{...n})}):c(n)}},8453:(n,t,e)=>{e.d(t,{R:()=>o,x:()=>p});var s=e(6540);const r={},i=s.createContext(r);function o(n){const t=s.useContext(i);return s.useMemo((function(){return"function"==typeof n?n(t):{...t,...n}}),[t,n])}function p(n){let t;return t=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:o(n.components),s.createElement(i.Provider,{value:t},n.children)}}}]);