"use strict";(self.webpackChunkxing_life_3=self.webpackChunkxing_life_3||[]).push([[2145],{4077:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>f,contentTitle:()=>r,default:()=>m,frontMatter:()=>a,metadata:()=>c,toc:()=>d});var o=i(4848),t=i(8453);const a={},r="get device info",c={id:"technique/flutter/get_device_info",title:"get device info",description:"https://pub.dev/packages/device_info",source:"@site/docs/technique/flutter/get_device_info.md",sourceDirName:"technique/flutter",slug:"/technique/flutter/get_device_info",permalink:"/docs/technique/flutter/get_device_info",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"techniqueSidebar",previous:{title:"FlutterFire (Flutter + Firebase)",permalink:"/docs/technique/flutter/flutterfire"},next:{title:"http",permalink:"/docs/technique/flutter/http"}},f={},d=[];function s(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"get-device-info",children:"get device info"})}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"https://pub.dev/packages/device_info",children:"https://pub.dev/packages/device_info"})}),"\n"]}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"https://pub.dev/packages/package_info/install",children:"https://pub.dev/packages/package_info/install"})}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"Map<String, dynamic> _information = <String, dynamic>{};\ntry {\n  // print('@@ DeviceInfoPlugin');\n  DeviceInfoPlugin deviceInfoPlugin = DeviceInfoPlugin();\n  if (Platform.isAndroid) {\n    AndroidDeviceInfo deviceInfo = await deviceInfoPlugin.androidInfo;\n\n    _information['version.securityPatch'] = deviceInfo.version.securityPatch;\n    _information['version.sdkInt'] = deviceInfo.version.sdkInt;\n    _information['version.release'] = deviceInfo.version.release;\n    _information['version.previewSdkInt'] = deviceInfo.version.previewSdkInt;\n    _information['version.incremental'] = deviceInfo.version.incremental;\n    _information['version.codename'] = deviceInfo.version.codename;\n    _information['version.baseOS'] = deviceInfo.version.baseOS;\n    _information['board'] = deviceInfo.board;\n    _information['bootloader'] = deviceInfo.bootloader;\n    _information['brand'] = deviceInfo.brand;\n    _information['device'] = deviceInfo.device;\n    _information['display'] = deviceInfo.display;\n    _information['fingerprint'] = deviceInfo.fingerprint;\n    _information['hardware'] = deviceInfo.hardware;\n    _information['host'] = deviceInfo.host;\n    _information['id'] = deviceInfo.id;\n    _information['manufacturer'] = deviceInfo.manufacturer;\n    _information['model'] = deviceInfo.model;\n    _information['product'] = deviceInfo.product;\n    _information['supported32BitAbis'] = deviceInfo.supported32BitAbis;\n    _information['supported64BitAbis'] = deviceInfo.supported64BitAbis;\n    _information['supportedAbis'] = deviceInfo.supportedAbis;\n    _information['tags'] = deviceInfo.tags;\n    _information['type'] = deviceInfo.type;\n    _information['isPhysicalDevice'] = deviceInfo.isPhysicalDevice;\n    _information['androidId'] = deviceInfo.androidId;\n    // information['systemFeatures'] = deviceInfo.systemFeatures;\n  } else if (Platform.isIOS) {\n    IosDeviceInfo deviceInfo = await deviceInfoPlugin.iosInfo;\n\n    _information['name'] = deviceInfo.name;\n    _information['systemName'] = deviceInfo.systemName;\n    _information['systemVersion'] = deviceInfo.systemVersion;\n    _information['model'] = deviceInfo.model;\n    _information['localizedModel'] = deviceInfo.localizedModel;\n    _information['identifierForVendor'] = deviceInfo.identifierForVendor;\n    _information['isPhysicalDevice'] = deviceInfo.isPhysicalDevice;\n    _information['utsname.sysname:'] = deviceInfo.utsname.sysname;\n    _information['utsname.nodename:'] = deviceInfo.utsname.nodename;\n    _information['utsname.release:'] = deviceInfo.utsname.release;\n    _information['utsname.version:'] = deviceInfo.utsname.version;\n    _information['utsname.machine:'] = deviceInfo.utsname.machine;\n  }\n} catch (e){\n  print('$e');\n}\n\ntry {\n  // print('@@ PackageInfo');\n  PackageInfo packageInfo = await PackageInfo.fromPlatform();\n\n  _information['packageInfo.appName'] = packageInfo.appName;\n  _information['packageInfo.packageName'] = packageInfo.packageName;\n  _information['packageInfo.version'] = packageInfo.version;\n  _information['packageInfo.buildNumber'] = packageInfo.buildNumber;\n} catch (e) {\n  print('$e');\n}\n\nreturn _information;\n\n"})})]})}function m(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(s,{...e})}):s(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>c});var o=i(6540);const t={},a=o.createContext(t);function r(e){const n=o.useContext(a);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),o.createElement(a.Provider,{value:n},e.children)}}}]);