"use strict";(self.webpackChunkxing_life_3=self.webpackChunkxing_life_3||[]).push([[6306],{4313:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>o,contentTitle:()=>s,default:()=>_,frontMatter:()=>d,metadata:()=>t,toc:()=>i});var r=a(4848),l=a(8453);const d={},s="\u795e\u7d93\u7db2\u8def\u8a13\u7df4\u6b65\u9a5f",t={id:"technique/TFkeras/training_steps",title:"\u795e\u7d93\u7db2\u8def\u8a13\u7df4\u6b65\u9a5f",description:"1. Training data: input X, Y",source:"@site/docs/technique/TFkeras/training_steps.md",sourceDirName:"technique/TFkeras",slug:"/technique/TFkeras/training_steps",permalink:"/docs/technique/TFkeras/training_steps",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"techniqueSidebar",previous:{title:"\u6df1\u5ea6\u795e\u7d93\u7db2\u8defDNN",permalink:"/docs/technique/TFkeras/dnn"},next:{title:"AWS",permalink:"/docs/technique/aws/"}},o={},i=[{value:"\u5168\u90e8\u8cc7\u6599\u5206\u4e09\u4efd",id:"\u5168\u90e8\u8cc7\u6599\u5206\u4e09\u4efd",level:2},{value:"Normalization \u6b63\u898f\u5316",id:"normalization-\u6b63\u898f\u5316",level:2},{value:"\u5efa\u7acbdata frame\u683c\u5f0f\u7684\u8a13\u7df4\u6578\u64da",id:"\u5efa\u7acbdata-frame\u683c\u5f0f\u7684\u8a13\u7df4\u6578\u64da",level:2},{value:"\u5efa\u7acb\u4e26\u8a13\u7df4\u7db2\u8def\u6a21\u578b",id:"\u5efa\u7acb\u4e26\u8a13\u7df4\u7db2\u8def\u6a21\u578b",level:2},{value:"\u8a2d\u5b9a\u8a13\u7df4\u4f7f\u7528\u7684\u512a\u5316\u5668\u3001\u640d\u5931\u51fd\u6578\u548c\u6307\u6a19\u51fd\u6578\uff1a",id:"\u8a2d\u5b9a\u8a13\u7df4\u4f7f\u7528\u7684\u512a\u5316\u5668\u640d\u5931\u51fd\u6578\u548c\u6307\u6a19\u51fd\u6578",level:2},{value:"\u5275\u5efa\u6a21\u578b\u5132\u5b58\u76ee\u9304\uff1a",id:"\u5275\u5efa\u6a21\u578b\u5132\u5b58\u76ee\u9304",level:2},{value:"\u8a2d\u5b9a\u56de\u8abf\u51fd\u6578\uff1a",id:"\u8a2d\u5b9a\u56de\u8abf\u51fd\u6578",level:2},{value:"\u8a13\u7df4\u7db2\u8def\u6a21\u578b\uff1a",id:"\u8a13\u7df4\u7db2\u8def\u6a21\u578b",level:2},{value:"\u8a13\u7df4\u7d50\u679c",id:"\u8a13\u7df4\u7d50\u679c",level:2},{value:"\u6e2c\u8a66\u6578\u64da\u7684\u8aa4\u5dee\u767e\u5206\u6bd4\uff1a\u7528\u6e2c\u8a66\u6578\u64da\u9810\u6e2c\u623f\u5c4b\u50f9\u683c\u4e26\u8207\u7b54\u6848\u8a08\u7b97\u8aa4\u5dee\u767e\u5206\u6bd4\u3002",id:"\u6e2c\u8a66\u6578\u64da\u7684\u8aa4\u5dee\u767e\u5206\u6bd4\u7528\u6e2c\u8a66\u6578\u64da\u9810\u6e2c\u623f\u5c4b\u50f9\u683c\u4e26\u8207\u7b54\u6848\u8a08\u7b97\u8aa4\u5dee\u767e\u5206\u6bd4",level:2},{value:"fix\u904e\u64ec\u5408\u554f\u984c",id:"fix\u904e\u64ec\u5408\u554f\u984c",level:2},{value:"test model_2",id:"test-model_2",level:4},{value:"test model_3",id:"test-model_3",level:4},{value:"test model_4",id:"test-model_4",level:4},{value:"\u907f\u514d\u6d6a\u8cbbtraing\u7684\u8cc7\u6e90",id:"\u907f\u514d\u6d6a\u8cbbtraing\u7684\u8cc7\u6e90",level:2}];function c(e){const n={code:"code",h1:"h1",h2:"h2",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",...(0,l.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"\u795e\u7d93\u7db2\u8def\u8a13\u7df4\u6b65\u9a5f",children:"\u795e\u7d93\u7db2\u8def\u8a13\u7df4\u6b65\u9a5f"})}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Training data: input X, Y"}),"\n",(0,r.jsx)(n.li,{children:"\u6c7a\u5b9aModel: DNN, CNN, RNN"}),"\n",(0,r.jsx)(n.li,{children:"Loss function: MSE, MAE"}),"\n",(0,r.jsx)(n.li,{children:"Optimizer: reference(keras.io/api/optimizers)"}),"\n",(0,r.jsx)(n.li,{children:"\u9a57\u8b49\u8cc7\u6599\u53ca\u6e2c\u8a66"}),"\n",(0,r.jsx)(n.li,{children:"\u8a55\u4f30\u6307\u6a19"}),"\n",(0,r.jsx)(n.li,{children:"\u8d85\u53c3\u6578"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"\u5168\u90e8\u8cc7\u6599\u5206\u4e09\u4efd",children:"\u5168\u90e8\u8cc7\u6599\u5206\u4e09\u4efd"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Training data"}),"\n",(0,r.jsx)(n.li,{children:"Validation data"}),"\n",(0,r.jsx)(n.li,{children:"Testing data"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"data_num = data.shape[0]\n# \u53d6\u5f97\u4e00\u7b46\u8207data\u6578\u91cf\u76f8\u540c\u7684\u4e82\u6578\u7d22\u5f15\uff0c\u4e3b\u8981\u76ee\u7684\u662f\u7528\u65bc\u6253\u6563\u8cc7\u6599\nindexes = np.random.permutation(data_num)\n# \u4e26\u5c07\u4e82\u6578\u7d22\u5f15\u503c\u5206\u70baTrain\u3001validation\u548ctest\u5206\u70ba\uff0c\u9019\u88e1\u7684\u5283\u5206\u6bd4\u4f8b\u70ba6:2:2\ntrain_indexes = indexes[:int(data_num *0.6)]\nval_indexes = indexes[int(data_num *0.6):int(data_num *0.8)]\ntest_indexes = indexes[int(data_num *0.8):]\n# \u900f\u904e\u7d22\u5f15\u503c\u5f9edata\u53d6\u51fa\u8a13\u7df4\u8cc7\u6599\u3001\u9a57\u8b49\u8cc7\u6599\u548c\u6e2c\u8a66\u8cc7\u6599\ntrain_data = data.loc[train_indexes] # data.iloc[:50] \u524d50\u7b46 data.loc[np.array([1, 5, 10])]\nval_data = data.loc[val_indexes]\ntest_data = data.loc[test_indexes]\n"})}),"\n",(0,r.jsx)(n.h2,{id:"normalization-\u6b63\u898f\u5316",children:"Normalization \u6b63\u898f\u5316"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"train_validation_data = pd.concat([train_data, val_data])\nmean = train_validation_data.mean() # shape: (1, 25)\nstd = train_validation_data.std()\n\ntrain_data = (train_data - mean) / std # column\nval_data = (val_data - mean) / std\n"})}),"\n",(0,r.jsx)(n.p,{children:"\uff01\uff01\uff01\uff01 \u6e2c\u8a66\u8cc7\u6599\u4e5f\u8981\u6b63\u898f\u5316\uff0c\u4f7f\u7528\u7684\u5e73\u5747\u503c\u8ddf\u6a19\u6e96\u5dee\u8981\u7528training data\u8ddf validation data\u7684\u5e73\u5747\u503c\u8ddf\u6a19\u6e96\u5dee"}),"\n",(0,r.jsx)(n.h2,{id:"\u5efa\u7acbdata-frame\u683c\u5f0f\u7684\u8a13\u7df4\u6578\u64da",children:"\u5efa\u7acbdata frame\u683c\u5f0f\u7684\u8a13\u7df4\u6578\u64da"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"x_train = train_data.drop('price', axis='columns')\ny_train = train_data['price']\nx_val = val_data.drop('price', axis='columns')\ny_val = val_data['price']\n"})}),"\n",(0,r.jsx)(n.h2,{id:"\u5efa\u7acb\u4e26\u8a13\u7df4\u7db2\u8def\u6a21\u578b",children:"\u5efa\u7acb\u4e26\u8a13\u7df4\u7db2\u8def\u6a21\u578b"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"# \u5efa\u7acb\u4e00\u500bSequential\u578b\u614b\u7684model\nmodel = keras.Sequential(name='model-1')\n# \u7b2c1\u5c64\u5168\u9023\u63a5\u5c64\u8a2d\u70ba64\u500bunit\uff0c\u5c07\u8f38\u5165\u5f62\u72c0\u8a2d\u5b9a\u70ba(21, )\uff0c\u800c\u5be6\u969b\u4e0a\u6211\u5011\u8f38\u5165\u7684\u6578\u64da\u5f62\u72c0\u70ba(batch_size, 21)\nmodel.add(layers.Dense(64, activation='relu', input_shape=(21,)))  #  activation \u662f\u555f\u52d5\u51fd\u6578\uff0c\u662f\u6700\u91cd\u8981\u7684\u90e8\u5206 \u6c92\u5beb\u7b49\u65bc\u5728\u505a\u7dda\u6027\u51fd\u6578\n# \u7b2c2\u5c64\u5168\u9023\u63a5\u5c64\u8a2d\u70ba64\u500bunit\nmodel.add(layers.Dense(64, activation='relu'))\n# \u6700\u5f8c\u4e00\u5c64\u5168\u9023\u63a5\u5c64\u8a2d\u70ba1\u500bunit\nmodel.add(layers.Dense(1))\n# \u986f\u793a\u7db2\u8def\u6a21\u578b\u67b6\u69cb\nmodel.summary()\n\n\u250f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2513\n\u2503 Layer (type)                    \u2503 Output Shape           \u2503       Param # \u2503\n\u2521\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2529\n\u2502 dense (Dense)                   \u2502 (None, 64)             \u2502         1,408 \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 dense_1 (Dense)                 \u2502 (None, 64)             \u2502         4,160 \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 dense_2 (Dense)                 \u2502 (None, 1)              \u2502            65 \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n"})}),"\n",(0,r.jsx)(n.h2,{id:"\u8a2d\u5b9a\u8a13\u7df4\u4f7f\u7528\u7684\u512a\u5316\u5668\u640d\u5931\u51fd\u6578\u548c\u6307\u6a19\u51fd\u6578",children:"\u8a2d\u5b9a\u8a13\u7df4\u4f7f\u7528\u7684\u512a\u5316\u5668\u3001\u640d\u5931\u51fd\u6578\u548c\u6307\u6a19\u51fd\u6578\uff1a"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"model.compile(keras.optimizers.Adam(0.001),\n              loss=keras.losses.MeanSquaredError(),\n              metrics=[keras.metrics.MeanAbsoluteError()])\n"})}),"\n",(0,r.jsx)(n.h2,{id:"\u5275\u5efa\u6a21\u578b\u5132\u5b58\u76ee\u9304",children:"\u5275\u5efa\u6a21\u578b\u5132\u5b58\u76ee\u9304\uff1a"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"model_dir = 'lab1-logs/models/'\nos.makedirs(model_dir)\n"})}),"\n",(0,r.jsx)(n.h2,{id:"\u8a2d\u5b9a\u56de\u8abf\u51fd\u6578",children:"\u8a2d\u5b9a\u56de\u8abf\u51fd\u6578\uff1a"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"# TensorBoard\u56de\u8abf\u51fd\u6578\u6703\u5e6b\u5fd9\u7d00\u9304\u8a13\u7df4\u8cc7\u8a0a\uff0c\u4e26\u5b58\u6210TensorBoard\u7684\u7d00\u9304\u6a94\nlog_dir = os.path.join('lab1-logs', 'model-1') # 'lab1-logs/model-1'\nmodel_cbk = keras.callbacks.TensorBoard(log_dir=log_dir)\n# ModelCheckpoint\u56de\u8abf\u51fd\u6578\u5e6b\u5fd9\u5132\u5b58\u7db2\u8def\u6a21\u578b\uff0c\u53ef\u4ee5\u8a2d\u5b9a\u53ea\u5132\u5b58\u6700\u597d\u7684\u6a21\u578b\uff0c\u300cmonitor\u300d\u8868\u793a\u88ab\u76e3\u6e2c\u7684\u6578\u64da\uff0c\u300cmode\u300dmin\u5247\u4ee3\u8868\u76e3\u6e2c\u6578\u64da\u8d8a\u5c0f\u8d8a\u597d\u3002\nmodel_mckp = keras.callbacks.ModelCheckpoint(model_dir + '/Best-model-1.keras',\n                                        monitor='val_mean_absolute_error',\n                                        save_best_only=True,\n                                        mode='min')\n"})}),"\n",(0,r.jsx)(n.h2,{id:"\u8a13\u7df4\u7db2\u8def\u6a21\u578b",children:"\u8a13\u7df4\u7db2\u8def\u6a21\u578b\uff1a"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"history = model.fit(x_train, y_train,  # \u50b3\u5165\u8a13\u7df4\u6578\u64da\n               batch_size=64,  # \u6279\u6b21\u5927\u5c0f\u8a2d\u70ba64\n               epochs=100,  # \u6574\u500bdataset\u8a13\u7df4100\u904d\n               validation_data=(x_val, y_val),  # \u9a57\u8b49\u6578\u64da\n               callbacks=[model_cbk, model_mckp])  # Tensorboard\u56de\u8abf\u51fd\u6578\u7d00\u9304\u8a13\u7df4\u904e\u7a0b\uff0cModelCheckpoint\u56de\u8abf\u51fd\u6578\u5132\u5b58\u6700\u597d\u7684\u6a21\u578b\n"})}),"\n",(0,r.jsx)(n.h2,{id:"\u8a13\u7df4\u7d50\u679c",children:"\u8a13\u7df4\u7d50\u679c"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"history.history.keys()  # \u67e5\u770bhistory\u5132\u5b58\u7684\u8cc7\u8a0a\u6709\u54ea\u4e9b \n## => dict_keys(['loss', 'mean_absolute_error', 'val_loss', 'val_mean_absolute_error'])\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"plt.plot(history.history['loss'], label='train')\nplt.plot(history.history['val_loss'], label='validation')\nplt.ylim(0.02, 0.2)\nplt.title('Mean square error')\nplt.ylabel('loss')\nplt.xlabel('epochs')\nplt.legend(loc='upper right')\n\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"plt.plot(history.history['mean_absolute_error'], label='train')\nplt.plot(history.history['val_mean_absolute_error'], label='validation')\nplt.ylim(0.12, 0.26)\nplt.title('Mean absolute error')\nplt.ylabel('metrics')\nplt.xlabel('epochs')\nplt.legend(loc='upper right')\n"})}),"\n",(0,r.jsx)(n.h2,{id:"\u6e2c\u8a66\u6578\u64da\u7684\u8aa4\u5dee\u767e\u5206\u6bd4\u7528\u6e2c\u8a66\u6578\u64da\u9810\u6e2c\u623f\u5c4b\u50f9\u683c\u4e26\u8207\u7b54\u6848\u8a08\u7b97\u8aa4\u5dee\u767e\u5206\u6bd4",children:"\u6e2c\u8a66\u6578\u64da\u7684\u8aa4\u5dee\u767e\u5206\u6bd4\uff1a\u7528\u6e2c\u8a66\u6578\u64da\u9810\u6e2c\u623f\u5c4b\u50f9\u683c\u4e26\u8207\u7b54\u6848\u8a08\u7b97\u8aa4\u5dee\u767e\u5206\u6bd4\u3002"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"# \u8f09\u5165\u6a21\u578b\nmodel = keras.models.load_model('lab1-logs/models/Best-model-1.keras')\n# \u5148\u5c07\u623f\u5c4b\u50f9\u683c\u53d6\u51fa\ny_test = test_data['price']\nprint(y_test.shape)\n# \u6a19\u6e96\u5316\u6578\u64da\ntest_data = (test_data - mean) / std\n# \u5c07\u8f38\u5165\u6578\u64da\u5b58\u6210Numpy \u683c\u5f0f # not necessary\nx_test = test_data.drop('price', axis='columns') # check shape\n# \u9810\u6e2c\u6e2c\u8a66\u6578\u64da\ny_pred = model.predict(x_test)\nprint(y_pred.shape)\n\n# \u5c07\u9810\u6e2c\u7d50\u679c\u8f49\u63db\u56de\u4f86(\u56e0\u70ba\u8a13\u7df4\u6642\u7684\u8a13\u7df4\u76ee\u6a19\u4e5f\u6709\u7d93\u904e\u6a19\u6e96\u5316)\ny_pred = y_pred * std['price'] + mean['price']\ny_pred = y_pred.reshape(y_test.shape)\nprint(y_pred.shape, y_test.shape)\n# \u8a08\u7b97\u5e73\u5747\u7684\u8aa4\u5dee\u767e\u5206\u6bd4\npercentage_error = np.mean(np.abs(y_test - y_pred) / y_test) * 100\n# \u986f\u793a\u8aa4\u5dee\u767e\u5206\u6bd4\nprint(\"Model_1 Percentage Error: {:.2f}%\".format(percentage_error))\n"})}),"\n",(0,r.jsx)(n.h2,{id:"fix\u904e\u64ec\u5408\u554f\u984c",children:"fix\u904e\u64ec\u5408\u554f\u984c"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"\u6e1b\u5c11\u7db2\u8def\u6b0a\u91cd(\u6e1b\u5c11\u795e\u7d93\u5143)"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"model_2 = keras.Sequential(name='model-2')\nmodel_2.add(layers.Dense(16, activation='relu', input_shape=(21,)))\nmodel_2.add(layers.Dense(16, activation='relu'))\nmodel_2.add(layers.Dense(1))\n\nmodel_2.compile(keras.optimizers.Adam(0.001),\n                loss=keras.losses.MeanSquaredError(),\n                metrics=[keras.metrics.MeanAbsoluteError()])\n\nlog_dir = os.path.join('lab2-logs', 'model-2')\nmodel_cbk = keras.callbacks.TensorBoard(log_dir=log_dir)\nmodel_mckp = keras.callbacks.ModelCheckpoint(model_dir + '/Best-model-2.keras',\n                                             monitor='val_mean_absolute_error',\n                                             save_best_only=True,\n                                             mode='min')\nmodel_2.fit(x_train, y_train,\n            batch_size=64 ,\n            epochs=100,\n            validation_data=(x_val, y_val),\n            callbacks=[model_cbk, model_mckp])\n\n"})}),"\n",(0,r.jsx)(n.h4,{id:"test-model_2",children:"test model_2"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"model_2 = keras.models.load_model('lab2-logs/models/Best-model-2.keras')\ny_pred = model_2.predict(x_test)\ny_pred = y_pred * std['price'] + mean['price']\ny_pred = y_pred.reshape(y_test.shape)\npercentage_error = np.mean(np.abs(y_test - y_pred) / y_test) * 100\n\nprint(\"Model_2: {:.2f}%\".format(percentage_error))\n"})}),"\n",(0,r.jsxs)(n.ol,{start:"2",children:["\n",(0,r.jsx)(n.li,{children:"L1\u6216L2 \u6b63\u5247\u5316"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"model_3 = keras.Sequential(name='model-3')\nmodel_3.add(layers.Dense(64, kernel_regularizer=keras.regularizers.l2(0.001),\n                         activation='relu', input_shape=(21,)))\nmodel_3.add(layers.Dense(64, kernel_regularizer=keras.regularizers.l2(0.001), activation='relu'))\nmodel_3.add(layers.Dense(1))\n\nmodel_3.compile(keras.optimizers.Adam(0.001),\n                loss=keras.losses.MeanSquaredError(),\n                metrics=[keras.metrics.MeanAbsoluteError()])\n\nlog_dir = os.path.join('lab2-logs', 'model-3')\nmodel_cbk = keras.callbacks.TensorBoard(log_dir=log_dir)\nmodel_mckp = keras.callbacks.ModelCheckpoint(model_dir + '/Best-model-3.keras',\n                                             monitor='val_mean_absolute_error',\n                                             save_best_only=True,\n                                             mode='min')\nmodel_3.fit(x_train, y_train,\n            batch_size=64 ,\n            epochs=100,\n            validation_data=(x_val, y_val),\n            callbacks=[model_cbk, model_mckp])\n"})}),"\n",(0,r.jsx)(n.h4,{id:"test-model_3",children:"test model_3"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"model_3 = keras.models.load_model('lab2-logs/models/Best-model-3.keras')\ny_pred = model_3.predict(x_test)\ny_pred = y_pred * std['price'] + mean['price']\ny_pred = y_pred.reshape(y_test.shape)\npercentage_error = np.mean(np.abs(y_test - y_pred) / y_test) * 100\n\nprint(\"Model_3: {:.2f}%\".format(percentage_error))\n"})}),"\n",(0,r.jsxs)(n.ol,{start:"3",children:["\n",(0,r.jsx)(n.li,{children:"Dropout"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"model_4 = keras.Sequential(name='model-4')\nmodel_4.add(layers.Dense(64, activation='relu', input_shape=(21,)))\nmodel_4.add(layers.Dropout(0.2))\nmodel_4.add(layers.Dense(64, activation='relu'))\nmodel_4.add(layers.Dropout(0.2))\nmodel_4.add(layers.Dense(1))\n\nmodel_4.compile(keras.optimizers.Adam(0.001),\n                loss=keras.losses.MeanSquaredError(),\n                metrics=[keras.metrics.MeanAbsoluteError()])\n\nlog_dir = os.path.join('lab2-logs', 'model-4')\nmodel_cbk = keras.callbacks.TensorBoard(log_dir=log_dir)\nmodel_mckp = keras.callbacks.ModelCheckpoint(model_dir + '/Best-model-4.keras',\n                                             monitor='val_mean_absolute_error',\n                                             save_best_only=True,\n                                             mode='min')\nmodel_4.fit(x_train, y_train,\n            batch_size=64 ,\n            epochs=100,\n            validation_data=(x_val, y_val),\n            callbacks=[model_cbk, model_mckp])\n"})}),"\n",(0,r.jsx)(n.h4,{id:"test-model_4",children:"test model_4"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"model_4 = keras.models.load_model('lab2-logs/models/Best-model-4.keras')\ny_pred = model_4.predict(x_test)\ny_pred = np.reshape(y_pred * std['price'] + mean['price'], y_test.shape)\npercentage_error = np.mean(np.abs(y_test - y_pred) / y_test) * 100\n\nprint(\"Model_4: {:.2f}%\".format(percentage_error))\n"})}),"\n",(0,r.jsx)(n.h2,{id:"\u907f\u514d\u6d6a\u8cbbtraing\u7684\u8cc7\u6e90",children:"\u907f\u514d\u6d6a\u8cbbtraing\u7684\u8cc7\u6e90"}),"\n",(0,r.jsx)(n.p,{children:"EarlyStopping"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"# \u5efa\u7acb\u4e00\u500bSequential\u578b\u614b\u7684model\nmodel = keras.Sequential(name='model-1')\n# \u7b2c1\u5c64\u5168\u9023\u63a5\u5c64\u8a2d\u70ba64\u500bunit\uff0c\u5c07\u8f38\u5165\u5f62\u72c0\u8a2d\u5b9a\u70ba(21, )\uff0c\u800c\u5be6\u969b\u4e0a\u6211\u5011\u8f38\u5165\u7684\u6578\u64da\u5f62\u72c0\u70ba(batch_size, 21)\nmodel.add(layers.Dense(64, activation='relu', input_shape=(21,)))\n# \u7b2c2\u5c64\u5168\u9023\u63a5\u5c64\u8a2d\u70ba64\u500bunit\nmodel.add(layers.Dense(64, activation='relu'))\n# \u6700\u5f8c\u4e00\u5c64\u5168\u9023\u63a5\u5c64\u8a2d\u70ba1\u500bunit\nmodel.add(layers.Dense(1))\n# \u986f\u793a\u7db2\u8def\u6a21\u578b\u67b6\u69cb\nmodel.summary()\n\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"model.compile(keras.optimizers.Adam(0.001),\n              loss=keras.losses.MeanSquaredError(),\n              metrics=[keras.metrics.MeanAbsoluteError()])\n\nlog_dir = os.path.join('lab2-logs', 'model-5')\nmodel_cbk = keras.callbacks.TensorBoard(log_dir=log_dir)\n# ModelCheckpoint\u56de\u8abf\u51fd\u6578\u5e6b\u5fd9\u5132\u5b58\u7db2\u8def\u6a21\u578b\uff0c\u53ef\u4ee5\u8a2d\u5b9a\u53ea\u5132\u5b58\u6700\u597d\u7684\u6a21\u578b\uff0c\u300cmonitor\u300d\u8868\u793a\u88ab\u76e3\u6e2c\u7684\u6578\u64da\uff0c\u300cmode\u300dmin\u5247\u4ee3\u8868\u76e3\u6e2c\u6578\u64da\u8d8a\u5c0f\u8d8a\u597d\u3002\nmodel_mckp = keras.callbacks.ModelCheckpoint(model_dir + '/Best-model-5.keras',\n                                        monitor='val_mean_absolute_error',\n                                        save_best_only=True,\n                                        mode='min')\n\nes = keras.callbacks.EarlyStopping(monitor='val_mean_absolute_error', mode='min', patience=10)\n\nhistory = model.fit(x_train, y_train,  # \u50b3\u5165\u8a13\u7df4\u6578\u64da\n               batch_size=64,  # \u6279\u6b21\u5927\u5c0f\u8a2d\u70ba64\n               epochs=100,  # \u6574\u500bdataset\u8a13\u7df4100\u904d\n               validation_data=(x_val, y_val),  # \u9a57\u8b49\u6578\u64da\n               callbacks=[model_cbk, model_mckp, es])  # Tensorboard\u56de\u8abf\u51fd\u6578\u7d00\u9304\u8a13\u7df4\u904e\u7a0b\uff0cModelCheckpoint\u56de\u8abf\u51fd\u6578\u5132\u5b58\u6700\u597d\u7684\u6a21\u578b\n"})})]})}function _(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},8453:(e,n,a)=>{a.d(n,{R:()=>s,x:()=>t});var r=a(6540);const l={},d=r.createContext(l);function s(e){const n=r.useContext(d);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:s(e.components),r.createElement(d.Provider,{value:n},e.children)}}}]);